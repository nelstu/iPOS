/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cesion;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Image;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;
import java.io.*;

import java.io.FileOutputStream;

import com.itextpdf.text.Document;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Desktop;
import java.awt.event.KeyEvent;
import static java.lang.Integer.parseInt;
import java.sql.PreparedStatement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.PrintException;
import javax.swing.JOptionPane;
import javax.swing.table.TableColumnModel;
import java.net.URL;

import org.apache.log4j.*;

/**
 *
 * @author dev
 */
public class pos extends javax.swing.JFrame {

    static org.apache.log4j.Logger log = org.apache.log4j.Logger.getLogger(pos.class);
    URL url = Conexion.class.getResource("Log4j.properties");

    DefaultTableModel modelo;
    DefaultTableModel modelodet;

    /**
     * Creates new form pos
     */
    public pos() {
        
        PropertyConfigurator.configure(url);
        initComponents();
        setLocationRelativeTo(null);
        limpiar();
        log.info("Iniciando");

        modelo = new DefaultTableModel();
        jTable2.setModel(modelo);
//ableColumnModel columnModel = tabla.getColumnModel();

        modelo.addColumn("Id");
        modelo.addColumn("Codigo");
        modelo.addColumn("Productos");
        modelo.addColumn("$ Venta");
        modelo.addColumn("Familia");

        TableColumnModel columnModel = jTable2.getColumnModel();
        columnModel.getColumn(0).setWidth(0);
        columnModel.getColumn(0).setMinWidth(0);
        columnModel.getColumn(0).setMaxWidth(0);
        columnModel.getColumn(1).setWidth(0);
        columnModel.getColumn(1).setMinWidth(0);
        columnModel.getColumn(1).setMaxWidth(0);
        columnModel.getColumn(2).setWidth(300);
        columnModel.getColumn(2).setMinWidth(300);
        columnModel.getColumn(2).setMaxWidth(300);
        columnModel.getColumn(3).setWidth(0);
        columnModel.getColumn(3).setMinWidth(0);
        columnModel.getColumn(3).setMaxWidth(0);
        modelodet = new DefaultTableModel();
        jTable1.setModel(modelodet);

        modelodet.addColumn("Codigo");
        modelodet.addColumn("Productos");
        modelodet.addColumn("Un");
        modelodet.addColumn("Cantidad");
        modelodet.addColumn("$ Precio");
        modelodet.addColumn("Total");
        modelodet.addColumn("Familia");

        TableColumnModel columnModel2 = jTable1.getColumnModel();
        columnModel2.getColumn(0).setPreferredWidth(100);
        columnModel2.getColumn(1).setPreferredWidth(300);
        columnModel2.getColumn(2).setPreferredWidth(50);
        columnModel2.getColumn(3).setPreferredWidth(100);
        columnModel2.getColumn(4).setPreferredWidth(100);
        columnModel2.getColumn(5).setPreferredWidth(100);
        columnModel2.getColumn(6).setPreferredWidth(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jButton5 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        Familias = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();

        setTitle("Punto de Venta");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jScrollPane2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jScrollPane2KeyPressed(evt);
            }
        });

        jTable2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTable2MouseEntered(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jLabel4.setText("Total");

        jTextField4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTextField4.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField4.setText("jTextField4");

        jLabel5.setText("Pago");

        jTextField5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTextField5.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField5.setText("jTextField5");
        jTextField5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField5FocusLost(evt);
            }
        });
        jTextField5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField5KeyPressed(evt);
            }
        });

        jLabel6.setText("Vuelto");

        jTextField6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTextField6.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField6.setText("jTextField6");

        jButton1.setBackground(new java.awt.Color(51, 204, 0));
        jButton1.setText("Pagar");
        jButton1.setPreferredSize(new java.awt.Dimension(78, 40));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel7.setText("usuario");

        jLabel1.setText("Codigo");

        jTextField1.setText("jTextField1");
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        jTextField2.setText("jTextField2");
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField2KeyPressed(evt);
            }
        });

        jTextField3.setText("jTextField3");

        jLabel2.setText("Producto");

        jLabel3.setText("Cantidad");

        jCheckBox1.setText("Mayorista");

        jCheckBox2.setText("Ticket");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCheckBox2)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox2))
                .addContainerGap())
        );

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cesion/img/DEL.jpg"))); // NOI18N
        jButton5.setText("-");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cesion/img/buscar.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cesion/img/buscar.png"))); // NOI18N

        jButton6.setText("Factura FV");
        jButton6.setPreferredSize(new java.awt.Dimension(109, 40));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Guia GD");
        jButton7.setPreferredSize(new java.awt.Dimension(95, 40));

        jLabel8.setText("Rut");

        jTextField7.setText("jTextField7");
        jTextField7.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField7FocusLost(evt);
            }
        });

        jLabel9.setText("Razon");

        jTextField8.setText("jTextField8");

        jLabel10.setText("Direccion");

        jTextField9.setText("jTextField9");

        jLabel11.setText("Comuna");

        jTextField10.setText("jTextField10");

        jLabel13.setText("Ciudad");

        jTextField11.setText("jTextField11");

        jLabel14.setText("Giro");

        jTextField12.setText("jTextField12");

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cesion/img/ADDREC.jpg"))); // NOI18N
        jButton8.setText("Nuevo");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel12.setText("POS Punto de Venta 2021");

        jLabel15.setText("Fechas");

        jLabel16.setText("jLabel16");

        jLabel17.setText("Boletas Emitidas");

        jLabel18.setText("jLabel18");

        jLabel19.setText("n4@n4.cl");

        jButton9.setBackground(new java.awt.Color(255, 51, 51));
        jButton9.setText("Productos");
        jButton9.setPreferredSize(new java.awt.Dimension(107, 40));
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        Familias.setBackground(new java.awt.Color(255, 255, 153));
        Familias.setText("Familias");
        Familias.setPreferredSize(new java.awt.Dimension(107, 40));
        Familias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FamiliasActionPerformed(evt);
            }
        });

        jButton10.setText("Cerra Caja");
        jButton10.setPreferredSize(new java.awt.Dimension(107, 40));
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText("Boletas");
        jButton11.setPreferredSize(new java.awt.Dimension(107, 40));
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setText("Datos Empresa");
        jButton12.setPreferredSize(new java.awt.Dimension(107, 40));
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setText("Configuracion");
        jButton13.setPreferredSize(new java.awt.Dimension(107, 40));
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cesion/img/excel.gif"))); // NOI18N
        jButton14.setText("Informes");
        jButton14.setMaximumSize(new java.awt.Dimension(99, 23));
        jButton14.setMinimumSize(new java.awt.Dimension(99, 23));
        jButton14.setPreferredSize(new java.awt.Dimension(99, 23));
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton15.setText("Tickets");
        jButton15.setMaximumSize(new java.awt.Dimension(107, 29));
        jButton15.setMinimumSize(new java.awt.Dimension(107, 29));
        jButton15.setPreferredSize(new java.awt.Dimension(107, 40));
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jLabel20.setText("Tickets Emitidos");

        jLabel21.setText("jLabel21");

        jLabel22.setText("Forma de Pago");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Efectivo", "Transbank", "Cheque" }));

        jLabel23.setText("Caja");

        jLabel24.setText("jLabel24");

        jButton4.setText("Pagar TICKET");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton16.setText("Retiros");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel15)
                                            .addComponent(jLabel17)
                                            .addComponent(jLabel7))
                                        .addGap(36, 36, 36)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel19)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel18)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(jLabel20))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel16)
                                                        .addGap(26, 26, 26)
                                                        .addComponent(jLabel23)))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel24)
                                                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                .addGap(36, 36, 36)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton5))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(763, 763, 763)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(7, 7, 7)
                                .addComponent(jLabel22)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox1, 0, 141, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel8))
                                .addGap(23, 23, 23)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField9)
                                    .addComponent(jTextField10)
                                    .addComponent(jTextField11)
                                    .addComponent(jTextField12, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jTextField8, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jButton4)
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel6))
                                        .addGap(28, 28, 28)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jTextField4)
                                            .addComponent(jTextField5)
                                            .addComponent(jTextField6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Familias, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton12, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(369, 369, 369)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton3)
                                .addGap(34, 34, 34))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel23)
                                    .addComponent(jLabel24))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel17)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel20)
                                    .addComponent(jLabel21))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel19))
                                .addGap(10, 10, 10))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Familias, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jButton16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 384, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton8))
                .addGap(15, 15, 15))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void cargarDriver() {
        try {
            Class.forName("com.mysql.jdbc.Driver");
        } catch (Exception ex) {

        }
    }

    private void limpiarjtable() {
        modelo.setRowCount(0);
        modelodet.setRowCount(0);
    }

    public void buscarcli() {

        String Buscar = jTextField7.getText();
        cargarDriver();
        Conexion cn = new Conexion();
        String dbURL = "jdbc:mysql://" + cn.ip + ":3306/" + cn.base;
        String username = cn.usuario;
        String password = cn.pass;
        Connection dbCon = null;
        Statement stmt = null;
        ResultSet rs = null;
        String query = "select rut,nombre,direccion,comuna,ciudad,giro from clientes where rut = '" + Buscar + "'";
        //  JOptionPane.showMessageDialog(null, query);
        try {
            //getting database connection to MySQL server 
            dbCon = DriverManager.getConnection(dbURL, username, password);
            //getting PreparedStatment to execute query 
            stmt = dbCon.prepareStatement(query);
            //Resultset returned by query 
            rs = stmt.executeQuery(query);
            while (rs.next()) {

                jTextField8.setText(rs.getString(2));
                jTextField9.setText(rs.getString(3));
                jTextField10.setText(rs.getString(4));
                jTextField11.setText(rs.getString(5));
                jTextField12.setText(rs.getString(6));

            }

        } catch (SQLException ex) {
            System.out.println("Nop");
        }

    }

    public void llenarbarra() {

        DefaultTableModel modelodet = (DefaultTableModel) jTable1.getModel();
        String Buscar = jTextField1.getText();
        cargarDriver();
        Conexion cn = new Conexion();
        String dbURL = "jdbc:mysql://" + cn.ip + ":3306/" + cn.base;
        String username = cn.usuario;
        String password = cn.pass;
        Connection dbCon = null;
        Statement stmt = null;
        ResultSet rs = null;
        String query = "select id,barra,producto,venta2,boleta,solicitaprecio,mayorista,familia from productos where barra = '" + Buscar + "'";
        // JOptionPane.showMessageDialog(null, query);
        try {
            //getting database connection to MySQL server 
            dbCon = DriverManager.getConnection(dbURL, username, password);
            //getting PreparedStatment to execute query 
            stmt = dbCon.prepareStatement(query);
            //Resultset returned by query 
            rs = stmt.executeQuery(query);
            String agregar = "S";
            while (rs.next()) {
                String solicitaprecio = rs.getString(6);

                Object[] object = new Object[7];
                object[0] = rs.getString(2);
                object[1] = rs.getString(3);
                object[2] = "";

                if ((!jCheckBox1.isSelected()) && this.jTextField3.getText().equals("1") && solicitaprecio.equals("N")) {
                    object[3] = "1";
                    object[4] = rs.getString(4);
                    object[5] = rs.getString(4);
                }
                if (((!jCheckBox1.isSelected()) && !this.jTextField3.getText().equals("1")) && solicitaprecio.equals("N")) {

                    object[3] = jTextField3.getText();
                    object[4] = rs.getString(4);
                    object[5] = String.valueOf(parseInt(rs.getString(4)) * parseInt(jTextField3.getText()));
                }

                if ((!jCheckBox1.isSelected()) && this.jTextField3.getText().equals("1") && solicitaprecio.equals("S")) {
                    String result = (String) JOptionPane.showInputDialog(
                            this,
                            "Ingrese $ Precio",
                            "Solicitud",
                            JOptionPane.PLAIN_MESSAGE,
                            null,
                            null,
                            "0"
                    );

                    if (result != null && result.length() > 0) {
                    } else {
                        JOptionPane.showMessageDialog(null, "Debe Seleccionar Precio");
                        agregar = "N";
                    }
                    object[3] = "1";
                    object[4] = result;
                    object[5] = result;
                }

                //mayorista
                if ((jCheckBox1.isSelected()) && this.jTextField3.getText().equals("1") && solicitaprecio.equals("N")) {
                    object[3] = "1";
                    object[4] = rs.getString(7);
                    object[5] = rs.getString(7);
                }
                if (((jCheckBox1.isSelected()) && !this.jTextField3.getText().equals("1")) && solicitaprecio.equals("N")) {

                    object[3] = jTextField3.getText();
                    object[4] = rs.getString(7);
                    object[5] = String.valueOf(parseInt(rs.getString(7)) * parseInt(jTextField3.getText()));
                }
                object[6] = rs.getString(8);
                /*
                 if (!solicitaprecio.equals("S")){
                   if (jCheckBox1.isSelected()){
                         object[4] = rs.getString(7); 
                         object[5] = rs.getString(7); 
                         }else{
                         object[4] = rs.getString(4); 
                         object[5] = rs.getString(4);
                         }
            
                   }
                 */
                String validador = (String) object[4];
                if (validador.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Sin Precio");
                    return;
                }
                if (validador.equals("0")) {
                    JOptionPane.showMessageDialog(null, "Sin Precio");
                    return;
                }

                System.out.println("Si");
                if (agregar.equals("S")) {
                    modelodet.addRow(object);
                }

            }
            sumardet();
            jCheckBox1.setSelected(false);
        } catch (SQLException ex) {
            System.out.println(ex.getMessage().toString());
        }

    }

    public void llenar1() {

        modelo.setRowCount(0);

        String Buscar = jTextField2.getText();
        cargarDriver();
        Conexion cn = new Conexion();
        String dbURL = "jdbc:mysql://" + cn.ip + ":3306/" + cn.base;
        String username = cn.usuario;
        String password = cn.pass;
        Connection dbCon = null;
        Statement stmt = null;
        ResultSet rs = null;
        String query = "select id,codigo,producto,venta2,mayorista,familia from productos where producto like '%" + Buscar + "%'";
        // JOptionPane.showMessageDialog(null, query);
        try {
            //getting database connection to MySQL server 
            dbCon = DriverManager.getConnection(dbURL, username, password);
            //getting PreparedStatment to execute query 
            stmt = dbCon.prepareStatement(query);
            //Resultset returned by query 
            rs = stmt.executeQuery(query);
            while (rs.next()) {

                Object[] object = new Object[5];
                object[0] = rs.getString(1);
                object[1] = rs.getString(2);
                object[2] = rs.getString(3);

                if (jCheckBox1.isSelected()) {
                    object[3] = rs.getString(5);
                } else {
                    object[3] = rs.getString(4);
                }
                object[4] = rs.getString(6);
                System.out.println("Si");

                modelo.addRow(object);
            }

        } catch (SQLException ex) {
            System.out.println("Nop");
        }

    }

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();

        // get the selected row index
        int selectedRowIndex = jTable2.getSelectedRow();
        String validador = (String) model.getValueAt(selectedRowIndex, 3).toString();
        if (validador.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Sin Precio");
            return;
        }
        if (validador.equals("0")) {
            JOptionPane.showMessageDialog(null, "Sin Precio");
            return;
        }
        Object[] object = new Object[7];
        object[0] = model.getValueAt(selectedRowIndex, 1).toString();
        object[1] = model.getValueAt(selectedRowIndex, 2).toString();
        object[2] = "";
        object[3] = jTextField3.getText();
        object[4] = model.getValueAt(selectedRowIndex, 3).toString();
        object[5] = String.valueOf(parseInt(model.getValueAt(selectedRowIndex, 3).toString()) * parseInt(jTextField3.getText()));
        object[6] = model.getValueAt(selectedRowIndex, 4).toString();
        System.out.println("Si");
        /*
        String validador=(String) object[1];
                if (validador.isEmpty()){
                    JOptionPane.showMessageDialog(null, "Sin Precio");
                    return;
                }
                  if (validador.equals("0")){
                    JOptionPane.showMessageDialog(null, "Sin Precio");
                    return;
                }
         */
        modelodet.addRow(object);
        jTextField2.setText("");
        jTextField3.setText("1");
        jTextField1.grabFocus();
        sumardet();
    }//GEN-LAST:event_jTable2MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        //  limpiarjtable();
        // TODO add your handling code here:
        llenar1();
        jTextField2.setText("");
        jTextField2.grabFocus();
    }//GEN-LAST:event_jButton3ActionPerformed

    void difpago() {
        String cad1 = jTextField4.getText().trim();
        String cad2 = jTextField5.getText().trim();
        int x1 = Integer.parseInt(cad1);
        int x2 = Integer.parseInt(cad2);
        int suma = x2 - x1;
        String total = String.valueOf(suma);
        jTextField6.setText(total);
    }

    void sumardet() {
        double sumatoria1 = 0;
        int totalRow = jTable1.getRowCount();
        totalRow -= 1;
        for (int i = 0; i <= (totalRow); i++) {
            double sumatoria = Double.parseDouble(String.valueOf(jTable1.getValueAt(i, 5)));
//en la parte de arriba indica el primer parametro la fila y el segundo la columna la cual estaras //manejando
            sumatoria1 += sumatoria;

            System.out.println("" + sumatoria1);

        }
        int numero = (int) sumatoria1;
        jTextField4.setText(String.valueOf((numero)));
    }

    void imprimirpdf() {
        String pdfFile = "C:\\dte3\\doc33.pdf";

        Document document = new Document();

        try {
            Image imagen = Image.getInstance("pdf417.png");
            PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream(pdfFile));
            document.open();
            PdfContentByte cb = writer.getDirectContent();

            cb.beginText();

            BaseFont bf = BaseFont.createFont(BaseFont.HELVETICA, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
            cb.setFontAndSize(bf, 14);
            cb.showTextAligned(PdfContentByte.ALIGN_LEFT, "Empresa", 50, 800, 0);
            cb.showTextAligned(PdfContentByte.ALIGN_LEFT, "Direccion", 50, 780, 0);
            cb.showTextAligned(PdfContentByte.ALIGN_LEFT, "Comuna", 50, 760, 0);
            cb.showTextAligned(PdfContentByte.ALIGN_LEFT, "Ciudad", 50, 740, 0);
            cb.showTextAligned(PdfContentByte.ALIGN_LEFT, "email", 50, 720, 0);

            cb.setFontAndSize(bf, 9);
            cb.showTextAligned(PdfContentByte.ALIGN_LEFT, "Razon", 50, 680, 0);
            cb.showTextAligned(PdfContentByte.ALIGN_LEFT, "Rut", 350, 680, 0);
            cb.showTextAligned(PdfContentByte.ALIGN_LEFT, "Direccion", 50, 660, 0);
            cb.showTextAligned(PdfContentByte.ALIGN_LEFT, "Fecha", 350, 660, 0);
            cb.showTextAligned(PdfContentByte.ALIGN_LEFT, "Comuna", 50, 640, 0);
            cb.showTextAligned(PdfContentByte.ALIGN_LEFT, "Forma de Pago", 350, 640, 0);
            cb.showTextAligned(PdfContentByte.ALIGN_LEFT, "Ciudad", 50, 620, 0);
            cb.showTextAligned(PdfContentByte.ALIGN_LEFT, "Telefono", 50, 600, 0);
            cb.showTextAligned(PdfContentByte.ALIGN_LEFT, "email", 50, 580, 0);

            cb.showTextAligned(PdfContentByte.ALIGN_LEFT, "Codigo", 50, 550, 0);
            cb.showTextAligned(PdfContentByte.ALIGN_LEFT, "Producto", 100, 550, 0);
            cb.showTextAligned(PdfContentByte.ALIGN_LEFT, "Unidad", 250, 550, 0);
            cb.showTextAligned(PdfContentByte.ALIGN_LEFT, "$ Precio", 300, 550, 0);
            cb.showTextAligned(PdfContentByte.ALIGN_LEFT, "Cantidad", 400, 550, 0);
            cb.showTextAligned(PdfContentByte.ALIGN_LEFT, "Total", 500, 550, 0);

            cb.showTextAligned(PdfContentByte.ALIGN_LEFT, "Subtotal", 400, 180, 0);
            cb.showTextAligned(PdfContentByte.ALIGN_LEFT, "Descuento", 400, 160, 0);
            cb.showTextAligned(PdfContentByte.ALIGN_LEFT, "Neto", 400, 140, 0);
            cb.showTextAligned(PdfContentByte.ALIGN_LEFT, "Iva (19%)", 400, 120, 0);
            cb.showTextAligned(PdfContentByte.ALIGN_LEFT, "Total", 400, 100, 0);

            cb.showTextAligned(PdfContentByte.ALIGN_LEFT, "Timbre Electronico SII", 150, 100, 0);
            cb.showTextAligned(PdfContentByte.ALIGN_LEFT, "Resolucion 0 de 2014", 150, 90, 0);
            cb.showTextAligned(PdfContentByte.ALIGN_LEFT, "Verifique documento:www.sii.cl", 130, 80, 0);
            cb.setColorFill(BaseColor.RED);
            cb.setFontAndSize(bf, 10);
            cb.showTextAligned(PdfContentByte.ALIGN_LEFT, "SII.-SANTIAGO CENTRO", 430, 700, 0);
            cb.setFontAndSize(bf, 14);
            cb.showTextAligned(PdfContentByte.ALIGN_LEFT, "RUT.:", 420, 780, 0);
            cb.showTextAligned(PdfContentByte.ALIGN_LEFT, "FACTURA ELECTRONICA", 400, 760, 0);
            cb.showTextAligned(PdfContentByte.ALIGN_LEFT, "Nª", 450, 740, 0);
            cb.endText();

            imagen.setAbsolutePosition(25, 130);
            document.add(imagen);

            cb.setRGBColorFill(255, 51, 51);
            cb.setLineWidth(2);
            //x eje y ancho alto
            cb.rectangle(380, 710, 200, 100);
            cb.stroke();

            cb.setRGBColorFill(0xFF, 0xFF, 0xFF);
            cb.setLineWidth(1);
            cb.rectangle(10, 10, 580, 820);
            cb.stroke();

            cb.setRGBColorFill(0xFF, 0xFF, 0xFF);
            cb.setLineWidth(1);
            cb.rectangle(10, 540, 580, 25);
            cb.stroke();

            cb.setRGBColorFill(0xFF, 0xFF, 0xFF);
            cb.setLineWidth(1);
            cb.rectangle(10, 540, 580, 150);
            cb.stroke();

        } catch (Exception e) {
            System.err.println(e.getMessage());
        }
        document.close();

        try {
            Desktop.getDesktop().open(new File("C:\\dte3\\doc33.pdf"));
            //To check if the solution is open or not, you can wait some time here
            Thread.sleep(1000);

        } catch (IOException | InterruptedException ex) {
            //   Logger.getLogger(Open.class.getName()).log(Level.SEVERE, null, ex);
        }
    }


    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel(); //TableProducto es el nombre de mi tabla ;) 
        dtm.removeRow(jTable1.getSelectedRow());
        sumardet();
    }//GEN-LAST:event_jButton5ActionPerformed


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        cargarDriver();
        Conexion cn = new Conexion();
        String dbURL = "jdbc:mysql://" + cn.ip + ":3306/" + cn.base;
        String username = cn.usuario;
        String password = cn.pass;
        Connection dbCon = null;
        Connection dbCon0 = null;
        Statement stmt = null;

        Connection dbCon4 = null;
        Statement stmt4 = null;
        ResultSet rs = null;
        int es = 0;
        String ticket = "N";
        String boleta = "N";
        String imprimir = "N";
        //buscar configuracion
        String query0 = "select boleta,ticket,imprimir from configuracion where id=1";

        String forma = this.jComboBox1.getSelectedItem().toString();
        // JOptionPane.showMessageDialog(null, query);
        try {
            //getting database connection to MySQL server 
            dbCon = DriverManager.getConnection(dbURL, username, password);
            //getting PreparedStatment to execute query 
            stmt = dbCon.prepareStatement(query0);
            //Resultset returned by query 
            rs = stmt.executeQuery(query0);
            while (rs.next()) {
                boleta = rs.getString(1);
                ticket = rs.getString(2);
                imprimir = rs.getString(3);
            }

        } catch (SQLException ex) {
            System.out.println(ex.getMessage().toString());
        }

        if (!jCheckBox2.isSelected()) {

            //fin buscar numero boleta
            if (boleta.equals("S")) {

                //buscar numero boleta
                String query1 = "select documento,contador from contador where documento='BOL'";
                // JOptionPane.showMessageDialog(null, query);
                try {
                    //getting database connection to MySQL server 
                    dbCon = DriverManager.getConnection(dbURL, username, password);
                    //getting PreparedStatment to execute query 
                    stmt = dbCon.prepareStatement(query1);
                    //Resultset returned by query 
                    rs = stmt.executeQuery(query1);
                    while (rs.next()) {

                        es = rs.getInt(2) + 1;

                    }

                } catch (SQLException ex) {
                    System.out.println(ex.getMessage().toString());
                }

                //fin buscar numero boleta
                java.util.Date utilDate = new java.util.Date(); //fecha actual
                long lnMilisegundos = utilDate.getTime();
                java.sql.Date sqlDate = new java.sql.Date(lnMilisegundos);
                java.sql.Time sqlTime = new java.sql.Time(lnMilisegundos);
                //JOptionPane.showMessageDialog(null, "insert into boletas(numero_bol,total,fecha,hora) values ("+String.valueOf(es)+"","+jTextField4.getText()+",'"+sqlDate.toString()+"','"+sqlTime+"')");
                try {
                    dbCon = DriverManager.getConnection(dbURL, username, password);
                    Statement comando = dbCon.createStatement();
                    float totalg = Integer.valueOf(jTextField4.getText());
                    float neto = Math.round(totalg / 1.19);
                    float iva = totalg - neto;
                    comando.executeUpdate("insert into boletas(usuario,caja,forma,estado,numero_bol,total,fecha,hora,neto,iva) values ('" + this.jLabel19.getText() + "'," + this.jLabel24.getText() + ",'" + forma + "','VIGENTE'," + String.valueOf(es) + "," + jTextField4.getText() + ",'" + sqlDate.toString() + "','" + sqlTime + "','" + neto + "','" + iva + "')");
                    //JOptionPane.showMessageDialog(null, "Boleta Creada");
                } catch (SQLException ex) {
                    setTitle(ex.toString());
                }
                //grabar detalle
                String codigo;
                String des;
                String un;
                String cant;
                String pre;
                String total;
                for (int i = 0; i < jTable1.getRowCount(); i++) {
                    //for (int j = 0; j < jTable1.getColumnCount(); j++) {
                    codigo = jTable1.getValueAt(i, 0).toString();
                    des = jTable1.getValueAt(i, 1).toString();
                    un = jTable1.getValueAt(i, 2).toString();
                    cant = jTable1.getValueAt(i, 3).toString();
                    pre = jTable1.getValueAt(i, 4).toString();
                    total = jTable1.getValueAt(i, 5).toString();
                    try {
                        dbCon = DriverManager.getConnection(dbURL, username, password);
                        Statement comando = dbCon.createStatement();
                        comando.executeUpdate("insert into detalle_bol(fecha,hora,numero_bol,codigo,descripcion,cant,precio,total) values ('" + sqlDate.toString() + "','" + sqlTime + "'," + String.valueOf(es) + ",'" + codigo + "','" + des + "','" + cant + "','" + pre + "','" + total + "')");
                        //JOptionPane.showMessageDialog(null, "Boleta Creada");
                    } catch (SQLException ex) {
                        System.out.println(ex.getMessage().toString());
                    }

                    //insertar
                    try {
                        dbCon0 = DriverManager.getConnection(dbURL, username, password);
                        Statement comando0 = dbCon0.createStatement();
                        comando0.executeUpdate("INSERT INTO movimientos(fecha,tipo,codigo,cantidad) VALUES ('" + sqlDate.toString() + "','BO','" + codigo + "'," + cant + ")");

                    } catch (SQLException ex2) {
                        System.out.println("Movimientos->" + ex2.getMessage().toString());
                    }

                    //fin insertar
                    // }
                    // System.out.println();
                }

                //fin grabar detalle
                //actualizar contador
                try {
                    dbCon = DriverManager.getConnection(dbURL, username, password);
                    Statement comando = dbCon.createStatement();
                    comando.executeUpdate("update contador set contador=" + String.valueOf(es) + " where documento='BOL'");
                    JOptionPane.showMessageDialog(null, "Boleta Creada");
                } catch (SQLException ex) {
                    System.out.println(ex.getMessage().toString());
                }
                //fin actualizar contador
                limpiar();
                limpiarjtable();
                String aimprimir = String.valueOf(es);
                try {
                    if (imprimir.equals("S")) {
                        imprimirtickets(aimprimir);
                    }
                } catch (PrintException ex) {
                    Logger.getLogger(pos.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(pos.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        }
        if (jCheckBox2.isSelected()) {
            //if (ticket.equals("S")){
            //buscar numero boleta
            String query1 = "select documento,contador from contador where documento='TIC'";
            // JOptionPane.showMessageDialog(null, query);
            try {
                //getting database connection to MySQL server 
                dbCon = DriverManager.getConnection(dbURL, username, password);
                //getting PreparedStatment to execute query 
                stmt = dbCon.prepareStatement(query1);
                //Resultset returned by query 
                rs = stmt.executeQuery(query1);
                while (rs.next()) {

                    es = rs.getInt(2) + 1;

                }

            } catch (SQLException ex) {
                System.out.println(ex.getMessage().toString());
                log.info(query1);
                log.info(ex.getMessage().toString());
            }

            //fin buscar numero boleta
            java.util.Date utilDate = new java.util.Date(); //fecha actual
            long lnMilisegundos = utilDate.getTime();
            java.sql.Date sqlDate = new java.sql.Date(lnMilisegundos);
            java.sql.Time sqlTime = new java.sql.Time(lnMilisegundos);
            //JOptionPane.showMessageDialog(null, "insert into boletas(numero_bol,total,fecha,hora) values ("+String.valueOf(es)+"","+jTextField4.getText()+",'"+sqlDate.toString()+"','"+sqlTime+"')");
            float totalg = Integer.valueOf(jTextField4.getText());
            float neto = Math.round(totalg / 1.19);
            float iva = totalg - neto;
            try {
                dbCon = DriverManager.getConnection(dbURL, username, password);
                Statement comando = dbCon.createStatement();

                comando.executeUpdate("insert into tickets(usuario,caja,forma,estado,numero_bol,total,fecha,hora,neto,iva) values ('" + this.jLabel19.getText() + "'," + this.jLabel24.getText() + ",'" + forma + "','VIGENTE'," + String.valueOf(es) + "," + jTextField4.getText() + ",'" + sqlDate.toString() + "','" + sqlTime + "','" + neto + "','" + iva + "')");
                //JOptionPane.showMessageDialog(null, "Boleta Creada");
            } catch (SQLException ex) {
                System.out.println(ex.getMessage().toString());
                log.info("insert into tickets(usuario,caja,forma,estado,numero_bol,total,fecha,hora,neto,iva) values ('" + this.jLabel19.getText() + "'," + this.jLabel24.getText() + ",'" + forma + "','VIGENTE'," + String.valueOf(es) + "," + jTextField4.getText() + ",'" + sqlDate.toString() + "','" + sqlTime + "','" + neto + "','" + iva + "')");
                log.info(ex.getMessage().toString());
            }

            try {
                dbCon4 = DriverManager.getConnection(dbURL, username, password);
                Statement comando4 = dbCon4.createStatement();
                comando4.executeUpdate("UPDATE cajas set numtic=numtic+1,ventatic=ventatic+" + jTextField4.getText() + " WHERE fecha='" + sqlDate.toString() + "' AND estado='Abierta'");

            } catch (SQLException ex4) {
                System.out.println("cajas->" + ex4.getMessage().toString());
                log.info("UPDATE cajas set numtic=numtic+1,ventatic=ventatic+" + jTextField4.getText() + " WHERE fecha='" + sqlDate.toString() + "' AND estado='Abierta'");
                log.info(ex4.getMessage().toString());
            }
            //grabar detalle
            String codigo;
            String des;
            String un;
            String cant;
            String pre;
            String total;
            for (int i = 0; i < jTable1.getRowCount(); i++) {
                //for (int j = 0; j < jTable1.getColumnCount(); j++) {
                codigo = jTable1.getValueAt(i, 0).toString();
                des = jTable1.getValueAt(i, 1).toString();
                un = jTable1.getValueAt(i, 2).toString();
                cant = jTable1.getValueAt(i, 3).toString();
                pre = jTable1.getValueAt(i, 4).toString();
                total = jTable1.getValueAt(i, 5).toString();

                try {
                    Connection conn = DriverManager.getConnection(dbURL, username, password);

                    String SQL_INSERT = "insert into detalle_tickets(fecha,hora,numero_bol,codigo,descripcion,cant,precio,total) values (?,?,?,?,?,?,?,?)";
                    PreparedStatement preparedStatement = conn.prepareStatement(SQL_INSERT);

                    preparedStatement.setString(1, sqlDate.toString());
                    preparedStatement.setString(2, sqlTime.toString());
                    preparedStatement.setString(3, String.valueOf(es));
                    if (codigo.isEmpty()) {
                        codigo = "";
                    }
                    preparedStatement.setString(4, codigo);
                    preparedStatement.setString(5, des);
                    preparedStatement.setString(6, cant);
                    preparedStatement.setString(7, pre);
                    preparedStatement.setString(8, total);

                    int row = preparedStatement.executeUpdate();
                    System.out.println(SQL_INSERT);
                    // rows affected
                    System.out.println(row); //1

                } catch (SQLException e) {
                    System.out.println(e.getMessage().toString());
                    System.err.format("SQL State: %s\n%s", e.getSQLState(), e.getMessage());

                    log.info("insert into detalle_tickets:");
                    log.info(e.getMessage().toString());

                } catch (Exception e) {
                    e.printStackTrace();
                }

                //insertar
                try {
                    dbCon0 = DriverManager.getConnection(dbURL, username, password);
                    Statement comando0 = dbCon0.createStatement();
                    comando0.executeUpdate("INSERT INTO movimientos(fecha,tipo,codigo,cantidad) VALUES ('" + sqlDate.toString() + "','TI','" + codigo + "'," + cant + ")");

                } catch (SQLException ex2) {
                    System.out.println("Movimientos->" + ex2.getMessage().toString());

                    log.info("INSERT INTO movimientos(fecha,tipo,codigo,cantidad) VALUES ('" + sqlDate.toString() + "','TI','" + codigo + "'," + cant + ")");
                    log.info(ex2.getMessage().toString());
                }

                //fin insertar
                // }
                // System.out.println();
            }

            //fin grabar detalle
            //actualizar contador
            try {
                dbCon = DriverManager.getConnection(dbURL, username, password);
                Statement comando = dbCon.createStatement();
                comando.executeUpdate("update contador set contador=" + String.valueOf(es) + " where documento='TIC'");
                JOptionPane.showMessageDialog(null, "Tickets Creado");
            } catch (SQLException ex) {
                setTitle(ex.toString());
                log.info("update contador set contador=" + String.valueOf(es) + " where documento='TIC'");
                log.info(ex.getMessage().toString());
            }
            //fin actualizar contador
            limpiar();
            limpiarjtable();
            String aimprimir = String.valueOf(es);
            try {
                if (imprimir.equals("S")) {
                    imprimirtickets2(aimprimir);
                }
            } catch (PrintException ex) {
                Logger.getLogger(pos.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(pos.class.getName()).log(Level.SEVERE, null, ex);
            }
            jCheckBox2.setSelected(false);
            //     } 
        }

        jTextField1.grabFocus();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_jTextField5KeyPressed

    private void jTextField5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField5FocusLost
        // TODO add your handling code here:
        difpago();
    }//GEN-LAST:event_jTextField5FocusLost

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        imprimirpdf();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTextField7FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField7FocusLost
        // TODO add your handling code here:
        buscarcli();
    }//GEN-LAST:event_jTextField7FocusLost

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        limpiar();
        limpiarjtable();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            // TODO add your handling code here:
            // limpiarjtable();
            // TODO add your handling code here:
            llenarbarra();
            jTextField1.setText("");
            jTextField3.setText("1");
            jTextField1.grabFocus();

        }

    }//GEN-LAST:event_jTextField1KeyPressed

    private void jScrollPane2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jScrollPane2KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jScrollPane2KeyPressed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:

        java.util.Date utilDate = new java.util.Date(); //fecha actual
        long lnMilisegundos = utilDate.getTime();
        java.sql.Date sqlDate = new java.sql.Date(lnMilisegundos);
        java.sql.Time sqlTime = new java.sql.Time(lnMilisegundos);
        jLabel16.setText(sqlDate.toString());

        //consultar Boletas Emitidas
        cargarDriver();
        Conexion cn = new Conexion();
        String dbURL = "jdbc:mysql://" + cn.ip + ":3306/" + cn.base;
        String username = cn.usuario;
        String password = cn.pass;
        Connection dbCon = null;
        Statement stmt = null;
        ResultSet rs = null;
        String query = "select * from boletas where  caja=" + this.jLabel24.getText() + " AND fecha = '" + sqlDate.toString() + "'";
        // JOptionPane.showMessageDialog(null, query);
        try {
            //getting database connection to MySQL server 
            dbCon = DriverManager.getConnection(dbURL, username, password);
            //getting PreparedStatment to execute query 
            stmt = dbCon.prepareStatement(query);
            //Resultset returned by query 
            rs = stmt.executeQuery(query);
            int son = 0;
            while (rs.next()) {
                son++;

            }
            jLabel18.setText(Integer.toString(son));
        } catch (SQLException ex) {
            System.out.println("Nop");
        }

        String query1 = "select * from tickets where caja=" + this.jLabel24.getText() + " AND fecha = '" + sqlDate.toString() + "'";
        // JOptionPane.showMessageDialog(null, query);
        try {
            //getting database connection to MySQL server 
            dbCon = DriverManager.getConnection(dbURL, username, password);
            //getting PreparedStatment to execute query 
            stmt = dbCon.prepareStatement(query1);
            //Resultset returned by query 
            rs = stmt.executeQuery(query1);
            int son = 0;
            while (rs.next()) {
                son++;

            }
            jLabel21.setText(Integer.toString(son));
        } catch (SQLException ex) {
            System.out.println("Nop");
        }

        //configuracion establecer default
        String query0 = "select defecto,Fapos,Gdpos,Ncpos,Ndpos,botonsoloticket from configuracion where id=1";
        // JOptionPane.showMessageDialog(null, query);
        try {
            //getting database connection to MySQL server 
            dbCon = DriverManager.getConnection(dbURL, username, password);
            //getting PreparedStatment to execute query 
            stmt = dbCon.prepareStatement(query0);
            //Resultset returned by query 
            rs = stmt.executeQuery(query0);
            String def = "B";
            String Fapos = "N";
            String Gdpos = "N";
            String botonsoloticket = "N";
            while (rs.next()) {
                def = rs.getString(1);
                Fapos = rs.getString(2);
                Gdpos = rs.getString(3);
                botonsoloticket = rs.getString(6);

            }

            if (botonsoloticket.equals("S")) {
                this.jButton4.setVisible(true);
                this.jButton1.setVisible(false);
            } else {
                this.jButton4.setVisible(false);
                this.jButton1.setVisible(true);
            }

            if (def.equals("T")) {
                jCheckBox2.setSelected(true);
            } else {
                jCheckBox2.setSelected(false);
            }

            if (Fapos.equals("S")) {
                this.jButton6.setVisible(true);
                //datos cliente
                this.jTextField7.setVisible(true);
                this.jTextField8.setVisible(true);
                this.jTextField9.setVisible(true);
                this.jTextField10.setVisible(true);
                this.jTextField11.setVisible(true);
                this.jTextField12.setVisible(true);

                this.jLabel8.setVisible(true);
                this.jLabel9.setVisible(true);
                this.jLabel10.setVisible(true);
                this.jLabel11.setVisible(true);
                this.jLabel13.setVisible(true);
                this.jLabel14.setVisible(true);

                //fin datos clientes
            } else {
                this.jButton6.setVisible(false);

                //datos cliente
                this.jTextField7.setVisible(false);
                this.jTextField8.setVisible(false);
                this.jTextField9.setVisible(false);
                this.jTextField10.setVisible(false);
                this.jTextField11.setVisible(false);
                this.jTextField12.setVisible(false);

                this.jLabel8.setVisible(false);
                this.jLabel9.setVisible(false);
                this.jLabel10.setVisible(false);
                this.jLabel11.setVisible(false);
                this.jLabel13.setVisible(false);
                this.jLabel14.setVisible(false);

                //fin datos clientes
            }

            if (Gdpos.equals("S")) {
                this.jButton7.setVisible(true);
                //datos cliente
                this.jTextField7.setVisible(true);
                this.jTextField8.setVisible(true);
                this.jTextField9.setVisible(true);
                this.jTextField10.setVisible(true);
                this.jTextField11.setVisible(true);
                this.jTextField12.setVisible(true);

                this.jLabel8.setVisible(true);
                this.jLabel9.setVisible(true);
                this.jLabel10.setVisible(true);
                this.jLabel11.setVisible(true);
                this.jLabel13.setVisible(true);
                this.jLabel14.setVisible(true);

                //fin datos clientes
            } else {
                this.jButton7.setVisible(false);

                this.jTextField7.setVisible(false);
                this.jTextField8.setVisible(false);
                this.jTextField9.setVisible(false);
                this.jTextField10.setVisible(false);
                this.jTextField11.setVisible(false);
                this.jTextField12.setVisible(false);

                this.jLabel8.setVisible(false);
                this.jLabel9.setVisible(false);
                this.jLabel10.setVisible(false);
                this.jLabel11.setVisible(false);
                this.jLabel13.setVisible(false);
                this.jLabel14.setVisible(false);
            }

        } catch (SQLException ex) {
            System.out.println("Nop");
        }
        //fin configuracion establecer default

        jTextField1.grabFocus();
        //fin consultar Boletas Emitidas
    }//GEN-LAST:event_formWindowActivated

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:

        posproductos objeto2 = new posproductos();
        objeto2.setVisible(true);


    }//GEN-LAST:event_jButton9ActionPerformed


    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        cerrarcaja objeto4 = new cerrarcaja();
        objeto4.setVisible(true);

        //limpiar
        objeto4.jLabel4.setText("");
        objeto4.jLabel8.setText("");
        objeto4.jLabel10.setText("");
        objeto4.jLabel12.setText("");
        objeto4.jLabel14.setText("");
        objeto4.jLabel16.setText("");

        objeto4.jLabel25.setText("");
        objeto4.jLabel26.setText("");
        objeto4.jLabel27.setText("");
        objeto4.jLabel29.setText(this.jLabel24.getText());
        objeto4.jLabel33.setText("");
        //fin limpiar

        java.util.Date utilDate = new java.util.Date(); //fecha actual
        long lnMilisegundos = utilDate.getTime();
        java.sql.Date sqlDate = new java.sql.Date(lnMilisegundos);
        java.sql.Time sqlTime = new java.sql.Time(lnMilisegundos);
        String fe = sqlDate.toString();
        cargarDriver();
        Conexion cn = new Conexion();
        String dbURL = "jdbc:mysql://" + cn.ip + ":3306/" + cn.base;
        String username = cn.usuario;
        String password = cn.pass;
        Connection dbCon = null;
        Statement stmt = null;
        ResultSet rs = null;
        String query = "select id,caja,fecha,montoinicial,estado from cajas where estado='Abierta' and fecha = '" + fe + "'";
        // JOptionPane.showMessageDialog(null, query);
        String montoinicial = "";
        String ca = "";
        try {
            //getting database connection to MySQL server 
            dbCon = DriverManager.getConnection(dbURL, username, password);
            //getting PreparedStatment to execute query 
            stmt = dbCon.prepareStatement(query);
            //Resultset returned by query 
            rs = stmt.executeQuery(query);

            while (rs.next()) {
                ca = rs.getString("caja");
                montoinicial = rs.getString("montoinicial");
                System.out.println("fe->" + montoinicial);
                objeto4.jLabel2.setText(fe);
                objeto4.jLabel6.setText(montoinicial);

            }

        } catch (SQLException ex) {
            System.out.println("Nop");
        }
        //ventas
        String query1 = "select numero_bol,total,estado,forma,caja from boletas WHERE caja=" + ca + " AND fecha = '" + fe + "'";
        // JOptionPane.showMessageDialog(null, query);
        int son = 0;
        int totalg = 0;
        try {
            //getting database connection to MySQL server 
            dbCon = DriverManager.getConnection(dbURL, username, password);
            //getting PreparedStatment to execute query 
            stmt = dbCon.prepareStatement(query1);
            //Resultset returned by query 
            rs = stmt.executeQuery(query1);

            while (rs.next()) {
                totalg = totalg + rs.getInt("total");
                son++;

            }
            objeto4.jLabel4.setText(String.valueOf(son));
            objeto4.jLabel14.setText(String.valueOf(totalg));
            objeto4.jLabel8.setText(String.valueOf(totalg));
            objeto4.jLabel10.setText("0");
            objeto4.jLabel12.setText("0");
            int tc = parseInt(montoinicial) + totalg;
            objeto4.jLabel16.setText(String.valueOf(tc));
        } catch (SQLException ex) {
            System.out.println("Nop");
        }

        //fin ventas
        //tickets
        String query2 = "select numero_bol,total,estado,forma,caja from tickets WHERE caja=" + ca + " AND fecha = '" + fe + "'";
        // JOptionPane.showMessageDialog(null, query);
        int son2 = 0;
        int totalg2 = 0;

        int ef2 = 0;
        int ch2 = 0;
        int tr2 = 0;
        int tc0 = 0;
        String forma = "";
        try {
            //getting database connection to MySQL server 
            dbCon = DriverManager.getConnection(dbURL, username, password);
            //getting PreparedStatment to execute query 
            stmt = dbCon.prepareStatement(query2);
            //Resultset returned by query 
            rs = stmt.executeQuery(query2);

            while (rs.next()) {
                forma = rs.getString("forma");
                totalg2 = totalg2 + rs.getInt("total");

                if (forma.equals("Efectivo")) {
                    ef2 = ef2 + rs.getInt("total");
                    objeto4.jLabel25.setText(String.valueOf(ef2));

                }
                if (forma.equals("Cheque")) {
                    ch2 = ch2 + rs.getInt("total");
                    objeto4.jLabel26.setText(String.valueOf(ch2));
                }
                if (forma.equals("Transbank")) {
                    tr2 = tr2 + rs.getInt("total");
                    objeto4.jLabel27.setText(String.valueOf(tr2));
                }

                son2++;

            }
            objeto4.jLabel23.setText(String.valueOf(son2));
            tc0 = parseInt(montoinicial) + totalg2;
            objeto4.jLabel24.setText(String.valueOf(tc0));

        } catch (SQLException ex) {
            System.out.println("Nop");
        }

        //fin ventas
        //retiros
        String query3 = "select id,fecha,monto from retiros WHERE fecha = '" + fe + "'";
        // JOptionPane.showMessageDialog(null, query);
        int total3 = 0;
        int tc = 0;
        try {
            //getting database connection to MySQL server 
            dbCon = DriverManager.getConnection(dbURL, username, password);
            //getting PreparedStatment to execute query 
            stmt = dbCon.prepareStatement(query3);
            //Resultset returned by query 
            rs = stmt.executeQuery(query3);

            while (rs.next()) {

                total3 = total3 + rs.getInt("monto");

            }

            tc = total3;
            objeto4.jLabel31.setText(String.valueOf(tc));

        } catch (SQLException ex) {
            System.out.println("Nop");
        }
        int tc3 = tc0 - tc;
        objeto4.jLabel16.setText(String.valueOf(tc3));
        //fin retiros
        
        
        
//cigarros
        String query31 = "select id,total from detalle_tickets WHERE familia='cigarros' AND fecha = '" + fe + "'";
        // JOptionPane.showMessageDialog(null, query);
        int total31 = 0;
        int t3 = 0;
        try {
            //getting database connection to MySQL server 
            dbCon = DriverManager.getConnection(dbURL, username, password);
            //getting PreparedStatment to execute query 
            stmt = dbCon.prepareStatement(query31);
            //Resultset returned by query 
            rs = stmt.executeQuery(query31);

            while (rs.next()) {

                total31 = total31 + rs.getInt("total");

            }

            t3 = total31;
            objeto4.jLabel33.setText(String.valueOf(t3));

        } catch (SQLException ex) {
            System.out.println("Nop");
        }
      
        
        //fin cigarros

    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:

        boletas objeto9 = new boletas();
        objeto9.setVisible(true);

    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        empresa objeto10 = new empresa();
        objeto10.setVisible(true);

        cargarDriver();
        Conexion cn = new Conexion();
        String dbURL = "jdbc:mysql://" + cn.ip + ":3306/" + cn.base;
        String username = cn.usuario;
        String password = cn.pass;
        Connection dbCon = null;
        Statement stmt = null;
        ResultSet rs = null;
        String query = "select id,rut,nombre,giro,acteco,direccion,comuna,ciudad,rut_replegal,nombre_replegal,fechares,res,fantasia from empresa where id=1 ";
        // JOptionPane.showMessageDialog(null, query);
        String montoinicial = "";
        try {

            //getting database connection to MySQL server 
            dbCon = DriverManager.getConnection(dbURL, username, password);
            //getting PreparedStatment to execute query 
            stmt = dbCon.prepareStatement(query);
            //Resultset returned by query 
            rs = stmt.executeQuery(query);

            while (rs.next()) {
                String rut = rs.getString("rut");
                String nombre = rs.getString("nombre");
                String direccion = rs.getString("direccion");
                String comuna = rs.getString("comuna");
                String ciudad = rs.getString("ciudad");
                String giro = rs.getString("giro");
                String fechares = rs.getString("fechares");
                String res = rs.getString("res");
                String acteco = rs.getString("acteco");
                String rut_replegal = rs.getString("rut_replegal");
                String nombre_replegal = rs.getString("nombre_replegal");
                String fantasia = rs.getString("fantasia");
                objeto10.jTextField1.setText("1");
                objeto10.jTextField2.setText(rut);
                objeto10.jTextField3.setText(nombre);
                objeto10.jTextField4.setText(direccion);
                objeto10.jTextField5.setText(comuna);
                objeto10.jTextField6.setText(ciudad);
                objeto10.jTextField7.setText(giro);
                objeto10.jTextField8.setText(fechares);
                objeto10.jTextField9.setText(res);
                objeto10.jTextField10.setText(acteco);
                objeto10.jTextField11.setText(rut_replegal);
                objeto10.jTextField12.setText(nombre_replegal);
                objeto10.jTextField13.setText(fantasia);

            }

        } catch (SQLException ex) {
            System.out.println("Nop");
        }


    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        configura objeto12 = new configura();
        objeto12.setVisible(true);

        cargarDriver();
        Conexion cn = new Conexion();
        String dbURL = "jdbc:mysql://" + cn.ip + ":3306/" + cn.base;
        String username = cn.usuario;
        String password = cn.pass;
        Connection dbCon = null;
        Statement stmt = null;
        ResultSet rs = null;
        String query = "select id,impresoratermica,boleta,ticket,imprimir,Fapos,Gdpos,Ncpos,Ndpos,imprimecierre,botonsoloticket from configuracion where id=1 ";
        // JOptionPane.showMessageDialog(null, query);
        String montoinicial = "";
        try {

            //getting database connection to MySQL server 
            dbCon = DriverManager.getConnection(dbURL, username, password);
            //getting PreparedStatment to execute query 
            stmt = dbCon.prepareStatement(query);
            //Resultset returned by query 
            rs = stmt.executeQuery(query);

            while (rs.next()) {
                String id = rs.getString("id");
                String impresoratermica = rs.getString("impresoratermica");
                String boleta = rs.getString("boleta");
                String ticket = rs.getString("ticket");
                String imprimir = rs.getString("imprimir");

                String Fapos = rs.getString("Fapos");
                String Gdpos = rs.getString("Gdpos");
                String Ncpos = rs.getString("Ncpos");
                String Ndpos = rs.getString("Ndpos");
                String imprimecierre = rs.getString("imprimecierre");
                String botonsoloticket = rs.getString("botonsoloticket");

                if (boleta.equals("S")) {
                    objeto12.jCheckBox1.setSelected(true);
                }
                if (ticket.equals("S")) {
                    objeto12.jCheckBox2.setSelected(true);
                }

                if (imprimir.equals("S")) {
                    objeto12.jCheckBox3.setSelected(true);
                }

                if (Fapos.equals("S")) {
                    objeto12.jCheckBox5.setSelected(true);
                }

                if (Gdpos.equals("S")) {
                    objeto12.jCheckBox6.setSelected(true);
                }

                if (Ncpos.equals("S")) {
                    objeto12.jCheckBox7.setSelected(true);
                }

                if (Ndpos.equals("S")) {
                    objeto12.jCheckBox8.setSelected(true);
                }

                if (imprimecierre.equals("S")) {
                    objeto12.jCheckBox9.setSelected(true);
                }
                if (botonsoloticket.equals("S")) {
                    objeto12.jCheckBox10.setSelected(true);
                }

                objeto12.jTextField1.setText(impresoratermica);

            }

        } catch (SQLException ex) {
            System.out.println("Nop");
        }

    }//GEN-LAST:event_jButton13ActionPerformed

    private void jTable2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable2MouseEntered

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:

        Informes0 objeto22 = new Informes0();
        objeto22.setVisible(true);

    }//GEN-LAST:event_jButton14ActionPerformed

    private void FamiliasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FamiliasActionPerformed
        // TODO add your handling code here:
        familias objeto13 = new familias();
        objeto13.setVisible(true);

    }//GEN-LAST:event_FamiliasActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:

        tickets objeto93 = new tickets();
        objeto93.setVisible(true);

    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        //JOptionPane.showMessageDialog(null, "Verificando");

        cargarDriver();
        Conexion cn = new Conexion();
        String dbURL = "jdbc:mysql://" + cn.ip + ":3306/" + cn.base;
        String username = cn.usuario;
        String password = cn.pass;
        Connection dbCon = null;
        Connection dbCon0 = null;
        Statement stmt = null;
        String forma = this.jComboBox1.getSelectedItem().toString();
        Connection dbCon4 = null;
        Statement stmt4 = null;
        ResultSet rsi = null;
        int es = 0;
//if (ticket.equals("S")){
        //buscar numero boleta
        String query1 = "select documento,contador from contador where documento='TIC'";
        // JOptionPane.showMessageDialog(null, query);
        try {
            //getting database connection to MySQL server 
            dbCon = DriverManager.getConnection(dbURL, username, password);
            //getting PreparedStatment to execute query 
            stmt = dbCon.prepareStatement(query1);
            //Resultset returned by query 
            rsi = stmt.executeQuery(query1);
            while (rsi.next()) {

                es = rsi.getInt(2) + 1;

            }
           dbCon.close();
        } catch (SQLException ex) {
            System.out.println(ex.getMessage().toString());
            log.info(query1);
            log.info(ex.getMessage().toString());
        }
        String bol = String.valueOf(es);
        //fin buscar numero boleta
        java.util.Date utilDate = new java.util.Date(); //fecha actual
        long lnMilisegundos = utilDate.getTime();
        java.sql.Date sqlDate = new java.sql.Date(lnMilisegundos);
        java.sql.Time sqlTime = new java.sql.Time(lnMilisegundos);
        //JOptionPane.showMessageDialog(null, "insert into boletas(numero_bol,total,fecha,hora) values ("+String.valueOf(es)+"","+jTextField4.getText()+",'"+sqlDate.toString()+"','"+sqlTime+"')");
        float totalg = Integer.valueOf(jTextField4.getText());
        float neto = Math.round(totalg / 1.19);
        float iva = totalg - neto;
        try {
            dbCon = DriverManager.getConnection(dbURL, username, password);
            Statement comando = dbCon.createStatement();

            comando.executeUpdate("insert into tickets(usuario,caja,forma,estado,numero_bol,total,fecha,hora,neto,iva) values ('" + this.jLabel19.getText() + "'," + this.jLabel24.getText() + ",'" + forma + "','VIGENTE'," + bol + "," + jTextField4.getText() + ",'" + sqlDate.toString() + "','" + sqlTime + "','" + neto + "','" + iva + "')");
            //JOptionPane.showMessageDialog(null, "Boleta Creada");
           dbCon.close();
        } catch (SQLException ex) {
            System.out.println("insert ticket->" + ex.getMessage().toString());
            log.info("insert into tickets(usuario,caja,forma,estado,numero_bol,total,fecha,hora,neto,iva) values ('" + this.jLabel19.getText() + "'," + this.jLabel24.getText() + ",'" + forma + "','VIGENTE'," + bol + "," + jTextField4.getText() + ",'" + sqlDate.toString() + "','" + sqlTime + "','" + neto + "','" + iva + "')");
            log.info(ex.getMessage().toString());
        }

        try {
            dbCon4 = DriverManager.getConnection(dbURL, username, password);
            Statement comando4 = dbCon4.createStatement();
            comando4.executeUpdate("UPDATE cajas set numtic=numtic+1,ventatic=ventatic+" + jTextField4.getText() + " WHERE fecha='" + sqlDate.toString() + "' AND estado='Abierta'");
            dbCon4.close();
        } catch (SQLException ex4) {
            System.out.println("cajas->" + ex4.getMessage().toString());
            log.info("UPDATE cajas set numtic=numtic+1,ventatic=ventatic+" + jTextField4.getText() + " WHERE fecha='" + sqlDate.toString() + "' AND estado='Abierta'");
            log.info(ex4.getMessage().toString());
        }
        //grabar detalle
        String codigo;
        String des;
        String un;
        String cant;
        String pre;
        String total;
        String familia;
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            //for (int j = 0; j < jTable1.getColumnCount(); j++) {
            if (jTable1.getValueAt(i, 0).toString().isEmpty()) {
                codigo = " ";
            } else {
                codigo = jTable1.getValueAt(i, 0).toString();
            }

            des = jTable1.getValueAt(i, 1).toString();
            un = jTable1.getValueAt(i, 2).toString();
            cant = jTable1.getValueAt(i, 3).toString();
            pre = jTable1.getValueAt(i, 4).toString();
            total = jTable1.getValueAt(i, 5).toString();
            familia = jTable1.getValueAt(i, 6).toString();
            String SQL_INSERT = "";
            try {
                Connection conn = DriverManager.getConnection(dbURL, username, password);

                SQL_INSERT = "insert into detalle_tickets(fecha,hora,numero_bol,codigo,descripcion,cant,precio,total,familia) values (?,?,?,?,?,?,?,?,?)";
                PreparedStatement preparedStatement = conn.prepareStatement(SQL_INSERT);

                preparedStatement.setString(1, sqlDate.toString());
                preparedStatement.setString(2, sqlTime.toString());
                preparedStatement.setString(3, String.valueOf(es));
                if (codigo.isEmpty()) {
                    codigo = "";
                }
                preparedStatement.setString(4, codigo);
                preparedStatement.setString(5, des);
                preparedStatement.setString(6, cant);
                preparedStatement.setString(7, pre);
                preparedStatement.setString(8, total);
                preparedStatement.setString(9, familia);

                int row = preparedStatement.executeUpdate();
                System.out.println(SQL_INSERT);
                // rows affected
                System.out.println(row); //1
                conn.close();

            } catch (SQLException e) {
                System.out.println(e.getMessage().toString());
                System.err.format("SQL State: %s\n%s", e.getSQLState(), e.getMessage());
                log.info(SQL_INSERT);
                log.info(e.getMessage().toString());
            } catch (Exception e) {
                e.printStackTrace();
                log.info(SQL_INSERT);
                log.info(e.getMessage().toString());
            }

            //insertar
            try {
                dbCon0 = DriverManager.getConnection(dbURL, username, password);
                Statement comando0 = dbCon0.createStatement();
                comando0.executeUpdate("INSERT INTO movimientos(fecha,tipo,codigo,cantidad) VALUES ('" + sqlDate.toString() + "','TI','" + codigo + "'," + cant + ")");
                dbCon0.close();
            } catch (SQLException ex2) {
                System.out.println("Movimientos->" + ex2.getMessage().toString());
            }

            //fin insertar
            // }
            // System.out.println();
        }

        //fin grabar detalle
        //actualizar contador
        try {
            dbCon = DriverManager.getConnection(dbURL, username, password);
            Statement comando = dbCon.createStatement();
            comando.executeUpdate("update contador set contador=" + bol + " where documento='TIC'");
            JOptionPane.showMessageDialog(null, "Tickets Creado");
            dbCon.close();
        } catch (SQLException ex) {
            setTitle(ex.toString());
        }
        //fin actualizar contador
        limpiar();
        limpiarjtable();

        //fin grabar
        String url = "jdbc:mysql://" + cn.ip + ":3306/" + cn.base + "?useSSL=false";
        String user = cn.usuario;
        password = cn.pass;

        System.out.println("Buscando Tickets a Imprimir...");
        String impresoratermica = "";
        //obtener impresora
        String queryx = "select id,impresoratermica,boleta,ticket,imprimir,Fapos,Gdpos,Ncpos,Ndpos,imprimecierre from configuracion where id=1 ";
        String imprimirti="N";
        try (Connection con = DriverManager.getConnection(url, user, password);
                PreparedStatement pst = con.prepareStatement(queryx);
                ResultSet rsx = pst.executeQuery()) {

            while (rsx.next()) {
                impresoratermica = rsx.getString("impresoratermica");
                imprimirti = rsx.getString("imprimir");

            }
            con.close();
        } catch (SQLException exx) {
            System.out.println(exx.getMessage());

        }

        //fin obtener impresora
        if (imprimirti.equals("S")){
        //datos empresa
        String query0 = "SELECT rut,nombre,direccion,comuna,ciudad,giro,fantasia FROM empresa WHERE id=1";
        String rut = "";
        String nombre = "";
        String direccion = "";
        String comuna = "";
        String ciudad = "";
        String giro = "";
        String fantasia = "";
        try (Connection con = DriverManager.getConnection(url, user, password);
                PreparedStatement pst = con.prepareStatement(query0);
                ResultSet rs0 = pst.executeQuery()) {

            while (rs0.next()) {
                rut = rs0.getString("rut");
                nombre = rs0.getString("nombre");
                direccion = rs0.getString("direccion");
                comuna = rs0.getString("comuna");
                ciudad = rs0.getString("ciudad");
                giro = rs0.getString("giro");
                fantasia = rs0.getString("fantasia");

            }
            con.close();
        } catch (SQLException ex2) {
            System.out.println(ex2.getMessage());

        }
        //fin datos empresa

        String query = "SELECT numero_bol,total,fecha,forma,neto,iva FROM tickets WHERE numero_bol=" + bol;
        String pr = impresoratermica;
        //  String pr="PDF Printer";
        int netoi = 0;
        int ivai = 0;
        try (Connection con = DriverManager.getConnection(url, user, password);
                PreparedStatement psti = con.prepareStatement(query);
                ResultSet rsi2 = psti.executeQuery()) {

            while (rsi2.next()) {
                int numero = rsi2.getInt("numero_bol");
                netoi = rsi2.getInt("neto");
                ivai = rsi2.getInt("iva");
                int totali = rsi2.getInt("total");
                String fecha = rsi2.getString("fecha");
                String formai = rsi2.getString("forma");
                /*
                System.out.print("numero->"+numero);
                System.out.print("neto->"+neto);
                System.out.print("iva->"+iva);
                System.out.print("total->"+total);
                System.out.print("fecha->"+fecha);
                System.out.print("forma->"+forma);
                 */
                PrinterService printerService = new PrinterService();

                System.out.println(printerService.getPrinters());

                //print some stuff
                printerService.printString(pr, fantasia + "\n");
                printerService.printString(pr, "Tickets Numero:" + numero + "\n");
                printerService.printString(pr, nombre + " \n");
                printerService.printString(pr, rut + " \n");
                printerService.printString(pr, giro + " \n");
                printerService.printString(pr, direccion + " \n");
                printerService.printString(pr, comuna + " \n");
                printerService.printString(pr, "Fecha:" + fecha + " \n\n\n");

                printerService.printString(pr, "Codigo Producto  Total \n");
                //detalle
                String query1i = "SELECT numero_bol,descripcion,cant,precio,total,codigo FROM detalle_tickets WHERE numero_bol=" + bol;
                try (Connection con1 = DriverManager.getConnection(url, user, password);
                        PreparedStatement pst1 = con.prepareStatement(query1i);
                        ResultSet rs1 = pst1.executeQuery()) {

                    while (rs1.next()) {
                        String codigoi = rs1.getString("codigo");
                        String productoi = rs1.getString("descripcion");
                        int totalli = rs1.getInt("total");
                        int canti = rs1.getInt("cant");
                        int precioi = rs1.getInt("precio");
                        printerService.printString(pr, codigoi + "\n");
                        printerService.printString(pr, productoi + "\n");
                        printerService.printString(pr, canti + "      $" + precioi + "\n");
                        printerService.printString(pr, "            $" + totalli + "\n");

                    }
                      con.close();
                      con1.close();
                } catch (SQLException ex1) {
                    System.out.println(ex1.getMessage());

                }

                //fin detalle
                printerService.printString(pr, "\nNeto                   $" + netoi + " \n");
                printerService.printString(pr, "Iva                    $" + ivai + " \n");
                printerService.printString(pr, "Total                  $" + totali + " \n\n\n");
                printerService.printString(pr, "Gracias por su Compra!!  \n\n\n");

                //    printerService.printImage(pr);	
                //    printerService.printString(pr, "Timbre Electronico SII Res.85 de 2011 \n");
                // cut that paper!
                byte[] cutP = new byte[]{0x1d, 'V', 1};

                printerService.printBytes(pr, cutP);

                Connection con3 = null;
                PreparedStatement ps3 = null;
                try {
                    con3 = DriverManager.getConnection(url, user, password);
                    String query3 = "update tickets set impresion=? where numero_bol=? ";
                    ps3 = con.prepareStatement(query3);
                    ps3.setString(1, "S");
                    ps3.setInt(2, numero);
                    ps3.executeUpdate();
                    System.out.println("Tickets Actualizada......");
                   con3.close();
                } catch (Exception e) {
                    e.printStackTrace();
                }

            }
       
        } catch (SQLException ex) {

        }
        
  }
        
        //update boleta
        System.out.println("Finalizado...");
        //fin update boleta


    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:

        retiros objeto138 = new retiros();
        objeto138.setVisible(true);

    }//GEN-LAST:event_jButton16ActionPerformed

    private void jTextField2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyPressed
        // TODO add your handling code here:

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            llenar1();
            jTextField2.setText("");
            jTextField2.grabFocus();

        }

    }//GEN-LAST:event_jTextField2KeyPressed

    public static void imprimirtickets2(String bol) throws PrintException, IOException {

        Conexion cn = new Conexion();

        String url = "jdbc:mysql://" + cn.ip + ":3306/" + cn.base + "?useSSL=false";
        String user = cn.usuario;
        String password = cn.pass;
        System.out.println("Buscando Tickets a Imprimir...");
        String impresoratermica = "";
        //obtener impresora
        String queryx = "select id,impresoratermica,boleta,ticket,imprimir,Fapos,Gdpos,Ncpos,Ndpos,imprimecierre from configuracion where id=1 ";

        try (Connection con = DriverManager.getConnection(url, user, password);
                PreparedStatement pst = con.prepareStatement(queryx);
                ResultSet rsx = pst.executeQuery()) {

            while (rsx.next()) {
                impresoratermica = rsx.getString("impresoratermica");

            }
        } catch (SQLException exx) {
            System.out.println(exx.getMessage());

        }

        //fin obtener impresora
        //datos empresa
        String query0 = "SELECT rut,nombre,direccion,comuna,ciudad,giro,fantasia FROM empresa WHERE id=1";
        String rut = "";
        String nombre = "";
        String direccion = "";
        String comuna = "";
        String ciudad = "";
        String giro = "";
        String fantasia = "";
        try (Connection con = DriverManager.getConnection(url, user, password);
                PreparedStatement pst = con.prepareStatement(query0);
                ResultSet rs0 = pst.executeQuery()) {

            while (rs0.next()) {
                rut = rs0.getString("rut");
                nombre = rs0.getString("nombre");
                direccion = rs0.getString("direccion");
                comuna = rs0.getString("comuna");
                ciudad = rs0.getString("ciudad");
                giro = rs0.getString("giro");
                fantasia = rs0.getString("fantasia");

            }
        } catch (SQLException ex2) {
            System.out.println(ex2.getMessage());

        }
        //fin datos empresa

        String query = "SELECT numero_bol,total,fecha,forma,neto,iva FROM tickets WHERE numero_bol=" + bol;
        String pr = impresoratermica;
        //  String pr="PDF Printer";
        int neto = 0;
        int iva = 0;
        try (Connection con = DriverManager.getConnection(url, user, password);
                PreparedStatement pst = con.prepareStatement(query);
                ResultSet rs = pst.executeQuery()) {

            while (rs.next()) {
                int numero = rs.getInt("numero_bol");
                neto = rs.getInt("neto");
                iva = rs.getInt("iva");
                int total = rs.getInt("total");
                String fecha = rs.getString("fecha");
                String forma = rs.getString("forma");
                /*
                System.out.print("numero->"+numero);
                System.out.print("neto->"+neto);
                System.out.print("iva->"+iva);
                System.out.print("total->"+total);
                System.out.print("fecha->"+fecha);
                System.out.print("forma->"+forma);
                 */
                PrinterService printerService = new PrinterService();

                System.out.println(printerService.getPrinters());

                //print some stuff
                printerService.printString(pr, fantasia + "\n");
                printerService.printString(pr, "Tickets Numero:" + numero + "\n");
                printerService.printString(pr, nombre + " \n");
                printerService.printString(pr, rut + " \n");
                printerService.printString(pr, giro + " \n");
                printerService.printString(pr, direccion + " \n");
                printerService.printString(pr, comuna + " \n");
                printerService.printString(pr, "Fecha:" + fecha + " \n\n\n");

                printerService.printString(pr, "Codigo Producto  Total \n");
                //detalle
                String query1 = "SELECT numero_bol,descripcion,cant,precio,total,codigo FROM detalle_tickets WHERE numero_bol=" + bol;
                try (Connection con1 = DriverManager.getConnection(url, user, password);
                        PreparedStatement pst1 = con.prepareStatement(query1);
                        ResultSet rs1 = pst1.executeQuery()) {

                    while (rs1.next()) {
                        String codigo = rs1.getString("codigo");
                        String producto = rs1.getString("descripcion");
                        int totall = rs1.getInt("total");
                        int cant = rs1.getInt("cant");
                        int precio = rs1.getInt("precio");
                        printerService.printString(pr, codigo + "\n");
                        printerService.printString(pr, producto + "\n");
                        printerService.printString(pr, cant + "      $" + precio + "\n");
                        printerService.printString(pr, "            $" + totall + "\n");

                    }

                } catch (SQLException ex1) {
                    System.out.println(ex1.getMessage());

                }

                //fin detalle
                printerService.printString(pr, "\nNeto                   $" + neto + " \n");
                printerService.printString(pr, "Iva                    $" + iva + " \n");
                printerService.printString(pr, "Total                  $" + total + " \n\n\n");
                printerService.printString(pr, "Gracias por su Compra!!  \n\n\n");

                //    printerService.printImage(pr);	
                //    printerService.printString(pr, "Timbre Electronico SII Res.85 de 2011 \n");
                // cut that paper!
                byte[] cutP = new byte[]{0x1d, 'V', 1};

                printerService.printBytes(pr, cutP);

                Connection con3 = null;
                PreparedStatement ps3 = null;
                try {
                    con3 = DriverManager.getConnection(url, user, password);
                    String query3 = "update tickets set impresion=? where numero_bol=? ";
                    ps3 = con.prepareStatement(query3);
                    ps3.setString(1, "S");
                    ps3.setInt(2, numero);
                    ps3.executeUpdate();
                    System.out.println("Tickets Actualizada......");
                } catch (Exception e) {
                    e.printStackTrace();
                }

            }

        } catch (SQLException ex) {

        }

        //update boleta
        System.out.println("Finalizado...");
        //fin update boleta

    }

    public static void imprimirtickets(String bol) throws PrintException, IOException {

        Conexion cn = new Conexion();
        String impresoratermica = "";
        String url = "jdbc:mysql://" + cn.ip + ":3306/" + cn.base + "?useSSL=false";
        String user = cn.usuario;
        String password = cn.pass;
        System.out.println("Buscando Boletas a Imprimir...");

        //obtener impresora
        String queryx = "select id,impresoratermica,boleta,ticket,imprimir,Fapos,Gdpos,Ncpos,Ndpos,imprimecierre from configuracion where id=1 ";

        try (Connection con = DriverManager.getConnection(url, user, password);
                PreparedStatement pst = con.prepareStatement(queryx);
                ResultSet rsx = pst.executeQuery()) {

            while (rsx.next()) {
                impresoratermica = rsx.getString("impresoratermica");

            }
        } catch (SQLException exx) {
            System.out.println(exx.getMessage());

        }

        //fin obtener impresora
        //datos empresa
        String query0 = "SELECT rut,nombre,direccion,comuna,ciudad,giro,fantasia FROM empresa WHERE id=1";
        String rut = "";
        String nombre = "";
        String direccion = "";
        String comuna = "";
        String ciudad = "";
        String giro = "";
        String fantasia = "";
        try (Connection con = DriverManager.getConnection(url, user, password);
                PreparedStatement pst = con.prepareStatement(query0);
                ResultSet rs0 = pst.executeQuery()) {

            while (rs0.next()) {
                rut = rs0.getString("rut");
                nombre = rs0.getString("nombre");
                direccion = rs0.getString("direccion");
                comuna = rs0.getString("comuna");
                ciudad = rs0.getString("ciudad");
                giro = rs0.getString("giro");
                fantasia = rs0.getString("fantasia");

            }
        } catch (SQLException ex2) {
            System.out.println(ex2.getMessage());

        }
        //fin datos empresa

        String query = "SELECT numero_bol,total,fecha,forma,neto,iva FROM boletas WHERE numero_bol=" + bol;
        String pr = impresoratermica;
        //  String pr="PDF Printer";
        int neto = 0;
        int iva = 0;
        try (Connection con = DriverManager.getConnection(url, user, password);
                PreparedStatement pst = con.prepareStatement(query);
                ResultSet rs = pst.executeQuery()) {

            while (rs.next()) {
                int numero = rs.getInt("numero_bol");
                neto = rs.getInt("neto");
                iva = rs.getInt("iva");
                int total = rs.getInt("total");
                String fecha = rs.getString("fecha");
                String forma = rs.getString("forma");
                /*
                System.out.print("numero->"+numero);
                System.out.print("neto->"+neto);
                System.out.print("iva->"+iva);
                System.out.print("total->"+total);
                System.out.print("fecha->"+fecha);
                System.out.print("forma->"+forma);
                 */
                PrinterService printerService = new PrinterService();

                System.out.println(printerService.getPrinters());

                //print some stuff
                printerService.printString(pr, fantasia + "\n");
                printerService.printString(pr, "Boleta Electronica Numero:" + numero + "\n");
                printerService.printString(pr, nombre + " \n");
                printerService.printString(pr, rut + " \n");
                printerService.printString(pr, giro + " \n");
                printerService.printString(pr, direccion + " \n");
                printerService.printString(pr, comuna + " \n");
                printerService.printString(pr, "Fecha:" + fecha + " \n");

                printerService.printString(pr, "Codigo Producto  Total \n");
                //detalle
                String query1 = "SELECT numero_bol,descripcion,cant,precio,total,codigo FROM detalle_bol WHERE numero_bol=" + bol;
                try (Connection con1 = DriverManager.getConnection(url, user, password);
                        PreparedStatement pst1 = con.prepareStatement(query1);
                        ResultSet rs1 = pst1.executeQuery()) {

                    while (rs1.next()) {
                        String codigo = rs1.getString("codigo");
                        String producto = rs1.getString("descripcion");
                        int totall = rs1.getInt("total");
                        printerService.printString(pr, codigo + "\n");
                        printerService.printString(pr, producto + "\n");
                        printerService.printString(pr, "       $" + totall + "\n");

                    }

                } catch (SQLException ex1) {
                    System.out.println(ex1.getMessage());

                }

                //fin detalle
                printerService.printString(pr, "\nNeto                   $" + neto + " \n");
                printerService.printString(pr, "Iva                    $" + iva + " \n");
                printerService.printString(pr, "Total                  $" + total + " \n\n");

                printerService.printImage(pr);

                printerService.printString(pr, "Timbre Electronico SII Res.85 de 2011 \n");
                // cut that paper!
                byte[] cutP = new byte[]{0x1d, 'V', 1};

                printerService.printBytes(pr, cutP);

                Connection con3 = null;
                PreparedStatement ps3 = null;
                try {
                    con3 = DriverManager.getConnection(url, user, password);
                    String query3 = "update boletas set impresion=? where numero_bol=? ";
                    ps3 = con.prepareStatement(query3);
                    ps3.setString(1, "S");
                    ps3.setInt(2, numero);
                    ps3.executeUpdate();
                    System.out.println("Boleta Actualizada......");
                } catch (Exception e) {
                    e.printStackTrace();
                }

            }

        } catch (SQLException ex) {

        }

        //update boleta
        System.out.println("Finalizado...");
        //fin update boleta

    }

    /**
     * @param args the command line arguments
     */
    private void limpiar() {
        jTextField1.setText(null);
        jTextField2.setText("");
        jTextField3.setText("1");
        jTextField4.setText("0");
        jTextField5.setText("0");
        jTextField6.setText("0");

        jTextField7.setText("");
        jTextField8.setText("");
        jTextField9.setText("");
        jTextField10.setText("");
        jTextField11.setText("");
        jTextField12.setText("");

    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(pos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(pos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(pos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new pos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Familias;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    public static javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    public static javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    public static javax.swing.JLabel jLabel18;
    public static javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    public static javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
