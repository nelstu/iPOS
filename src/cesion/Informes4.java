/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cesion;

import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import jxl.Workbook;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;
import jxl.write.WriteException;

/**
 *
 * @author dev
 */
public class Informes4 extends javax.swing.JFrame {

    /**
     * Creates new form Informes4
     */
    public Informes4() {
        initComponents();
        setLocationRelativeTo(null);
    }

   private void cargarDriver() {
    try {
      Class.forName("com.mysql.jdbc.Driver");
    }catch(Exception ex) {

    }
  }

    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jCheckBox1 = new javax.swing.JCheckBox();

        setTitle("Ventas por dia por Familia");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jLabel1.setText("Desde");

        jDateChooser1.setDateFormatString("yyyy-MM-dd");

        jLabel2.setText("Hasta");

        jDateChooser2.setDateFormatString("yyyy-MM-dd");

        jButton1.setText("Informes");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Familia");

        jCheckBox1.setText("Todos");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jCheckBox1)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3))
                            .addGap(35, 35, 35)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                                .addComponent(jDateChooser2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jCheckBox1)
                .addGap(9, 9, 9)
                .addComponent(jButton1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

      SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String fecha = sdf.format(this.jDateChooser1.getDate()); 
        String Buscar= fecha;
        
        String fecha2 = sdf.format(this.jDateChooser2.getDate()); 
        String Buscar2= fecha2;
        
      //  String familia= this.jComboBox1.getSelectedItem().toString();
         
try
{
    
    File f = new File("informeporticketfamilia.xls"); // Creamos un objeto file
    System.out.println(f.getAbsolutePath());  
//Se crea el libro Excel
WritableWorkbook workbook =Workbook.createWorkbook(f);

//Se crea una nueva hoja dentro del libro
WritableSheet sheet =workbook.createSheet("Informe", 0);

//Creamos celdas de varios tipos
//sheet.addCell(new jxl.write.Number(0, 0, "Numero"));
sheet.addCell(new jxl.write.Label(0, 0, "Fecha"));
sheet.addCell(new jxl.write.Label(1, 0, "Codigo"));
sheet.addCell(new jxl.write.Label(2, 0, "Descripcion"));
sheet.addCell(new jxl.write.Label(3, 0, "Cant"));
sheet.addCell(new jxl.write.Label(4, 0, "$Precio"));
sheet.addCell(new jxl.write.Label(5, 0, "Total"));
sheet.addCell(new jxl.write.Label(6, 0, "Familia"));
//sheet.addCell(new jxl.write.Boolean(3,0,true));
//buscar ventas
cargarDriver();
    Conexion cn = new Conexion();
    String dbURL = "jdbc:mysql://" + cn.ip + ":3306/" + cn.base;
    String username = cn.usuario;
    String password = cn.pass;
    Connection dbCon = null;
    Statement stmt = null;
    ResultSet rs = null;
    Statement stmt1 = null;
    ResultSet rs1 = null;
    String BuscarCod = "";
    String familia = this.jComboBox1.getSelectedItem().toString();
    // String query ="select fecha,codigo,descripcion,cant,precio,total from detalle_tickets WHERE fecha>='"+Buscar+"' AND fecha<='"+Buscar2+"' order by fecha ASC"; 
    String query = "";
    if (jCheckBox1.isSelected()) {
        query = "SELECT detalle_tickets.fecha,detalle_tickets.codigo,detalle_tickets.descripcion,detalle_tickets.cant,detalle_tickets.precio,detalle_tickets.total,productos.familia  FROM `detalle_tickets`";
        query = query + " INNER JOIN productos ";
        query = query + " ON detalle_tickets.codigo = productos.barra ";
        query = query + " WHERE   fecha>='" + Buscar + "' AND fecha<='" + Buscar2 + "'";

    } else {
        if (this.jComboBox1.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(null, "Debe Seleccionar Familia");
            return;
        }
        
        
        query = "SELECT detalle_tickets.fecha,detalle_tickets.codigo,detalle_tickets.descripcion,detalle_tickets.cant,detalle_tickets.precio,detalle_tickets.total,productos.familia  FROM `detalle_tickets`";
        query = query + " INNER JOIN productos ";
        query = query + " ON detalle_tickets.codigo = productos.barra ";
        query = query + " WHERE  productos.familia = '" + familia + "' AND fecha>='" + Buscar + "' AND fecha<='" + Buscar2 + "'";

    }
    
    
   
        try {
              //getting database connection to MySQL server 
            dbCon = DriverManager.getConnection(dbURL, username, password); 
           //getting PreparedStatment to execute query 
           stmt = dbCon.prepareStatement(query); 
          //Resultset returned by query 
           rs = stmt.executeQuery(query);  
           int j=1;
           int jtot=0;
           int totalboletas=0;
           int totalrango=0;
           int son=0;
           String fam="";
            while (rs.next()) {
                sheet.addCell(new jxl.write.Label(0, j, rs.getString(1)));
                sheet.addCell(new jxl.write.Label(1, j, rs.getString(2)));
                sheet.addCell(new jxl.write.Label(2, j, rs.getString(3)));

                sheet.addCell(new jxl.write.Number(3, j, rs.getInt(4)));
                sheet.addCell(new jxl.write.Number(4, j, rs.getInt(5)));
                sheet.addCell(new jxl.write.Number(5, j, rs.getInt(6)));
                sheet.addCell(new jxl.write.Label(6, j, rs.getString(7)));

                son = son + rs.getInt(4);
                jtot = jtot + rs.getInt(6);

                j++;
            }
             j++;
            sheet.addCell(new jxl.write.Label(0, j, "Totales"));
            sheet.addCell(new jxl.write.Number(3, j, son));
            sheet.addCell(new jxl.write.Number(5, j, jtot));
        } catch(SQLException ex){
          System.out.println(ex.getMessage().toString() ); 
        }
//fin buscar ventas


//Escribimos los resultados al fichero Excel
workbook.write();
workbook.close();



System.out.println("Ejemplo finalizado.");
}
catch (IOException ex)
{
System.out.println("Error al crear el fichero.");
}
catch (WriteException ex)
{
System.out.println("Error al escribir el fichero.");
}

  try {
                Desktop.getDesktop().open(new File("informeporticketfamilia.xls"));
                //To check if the solution is open or not, you can wait some time here
                Thread.sleep(1000);

            } catch (IOException | InterruptedException ex) {
             //   Logger.getLogger(Open.class.getName()).log(Level.SEVERE, null, ex);
      

}  
   
         


    }//GEN-LAST:event_jButton1ActionPerformed

     private void cargarcombofamilias(){
        this.jComboBox1.removeAllItems();
        cargarDriver();
         Conexion cn=new Conexion();
        String dbURL = "jdbc:mysql://"+cn.ip+":3306/"+cn.base;
        String username = cn.usuario;
        String password = cn.pass;
        Connection dbCon = null;
        Statement stmt = null;
        ResultSet rs = null;
        String query = "select id,familias from familias order by familias";
        // JOptionPane.showMessageDialog(null, query);
       String montoinicial="";
        try {
            //getting database connection to MySQL server 
            dbCon = DriverManager.getConnection(dbURL, username, password);
            //getting PreparedStatment to execute query 
            stmt = dbCon.prepareStatement(query);
            //Resultset returned by query 
            rs = stmt.executeQuery(query);
           
            while (rs.next()) {
                 String familias=rs.getString("familias");
              this.jComboBox1.addItem(familias);
        }
          
        } catch (SQLException ex) {
            System.out.println("Nop");
        }
    }
    
    
    
    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:

         cargarcombofamilias();


    }//GEN-LAST:event_formWindowActivated

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Informes4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Informes4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Informes4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Informes4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Informes4().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox<String> jComboBox1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
